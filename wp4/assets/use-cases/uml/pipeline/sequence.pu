@startuml


actor User

control JobManager
participant "Process/Application" as Nodes
participant ESDM
control "Post Processing" as post

database "Storage System" as storage
actor Observer

== Observer ==

Observer -> Observer: collects observations
Observer -> storage: (may write directly)
Observer -> ESDM: write observation t
ESDM -> ESDM: (transform for efficiency)
ESDM -> storage: write container for observation t


== Simulation Runs ==
JobManager -> JobManager: periodically submit job(IN=t, OUT)
JobManager -> Nodes: allocates resources and calls

Nodes -> ESDM: read IN=x
ESDM -> storage: read 
ESDM <- storage: return 
Nodes <- ESDM: return

Nodes -> Nodes: compute
activate Nodes

Nodes -> ESDM: write async OUT=y

== Value-added products ==

ESDM -> post: make available
post -> post: perform analysis
post -> storage: (may write directly)
post -> ESDM: return result
ESDM -> Nodes: return

...multiple iterations...

== Finalise == 

storage -> User: OUT files become visible

@enduml
